{"version":3,"sources":["DimensionsProvider.js","SoundfontProvider.js","PianoWithRecording.js","index.js"],"names":["DimensionsProvider","this","props","children","containerWidth","containerHeight","React","Component","Dimensions","SoundfontProvider","loadInstrument","instrumentName","setState","instrument","Soundfont","audioContext","format","soundfont","nameToUrl","name","hostname","then","playNote","midiNumber","resume","audioNode","state","play","activeAudioNodes","Object","assign","stopNote","stop","stopAllNotes","values","forEach","node","prevProps","prevState","render","isLoading","defaultProps","PianoWithRecording","keysDown","noteDuration","playing","onPlayNoteInput","d","Date","notesRecorded","startTime","getTime","console","log","onStopNoteInput","prevActiveNotes","recordNotes","midiNumbers","duration","recording","mode","newEvents","map","time","currentTime","setRecording","events","concat","pianoProps","currentEvents","activeNotes","event","window","AudioContext","webkitAudioContext","backendIP","path","require","noteRange","first","MidiNumbers","fromNote","last","keyboardShortcuts","KeyboardShortcuts","create","firstNote","lastNote","keyboardConfig","HOME_ROW","App","className","src","ResponsivePiano","getRecordingEndTime","length","Math","max","value","onClickPlay","_","uniq","flatMap","scheduledEvents","push","setTimeout","filter","onClickStop","scheduledEvent","clearTimeout","onClickClear","onClickChange","onClickML","a","loader","document","querySelector","button","player","getElementById","style","display","durations","pitches","dataToSend","pitch","fetch","method","headers","Accept","body","JSON","stringify","res","text","midiFileName","basename","file_name","mp3FileNamePromise","mp3FileName","width","disabled","onClick","id","controls","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.a89dac3f.chunk.js","sourcesContent":["import React from \"react\";\nimport Dimensions from \"react-dimensions\";\n\nclass DimensionsProvider extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children({\n          containerWidth: this.props.containerWidth,\n          containerHeight: this.props.containerHeight\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Dimensions()(DimensionsProvider);\n","// See https://github.com/danigb/soundfont-player\n// for more documentation on prop options.\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Soundfont from \"soundfont-player\";\n\nclass SoundfontProvider extends React.Component {\n  static propTypes = {\n    instrumentName: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    format: PropTypes.oneOf([\"mp3\", \"ogg\"]),\n    soundfont: PropTypes.oneOf([\"MusyngKite\", \"FluidR3_GM\"]),\n    audioContext: PropTypes.instanceOf(window.AudioContext),\n    render: PropTypes.func\n  };\n\n  static defaultProps = {\n    format: \"mp3\",\n    soundfont: \"MusyngKite\",\n    instrumentName: \"acoustic_grand_piano\"\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {},\n      instrument: null\n    };\n  }\n\n  componentDidMount() {\n    this.loadInstrument(this.props.instrumentName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n  }\n\n  loadInstrument = (instrumentName) => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null\n    });\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\n      format: this.props.format,\n      soundfont: this.props.soundfont,\n      nameToUrl: (name, soundfont, format) => {\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n      }\n    }).then((instrument) => {\n      this.setState({\n        instrument\n      });\n    });\n  };\n\n  playNote = (midiNumber) => {\n    this.props.audioContext.resume().then(() => {\n      const audioNode = this.state.instrument.play(midiNumber);\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: audioNode\n        })\n      });\n    });\n  };\n\n  stopNote = (midiNumber) => {\n    this.props.audioContext.resume().then(() => {\n      if (!this.state.activeAudioNodes[midiNumber]) {\n        return;\n      }\n      const audioNode = this.state.activeAudioNodes[midiNumber];\n      audioNode.stop();\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: null\n        })\n      });\n    });\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = () => {\n    this.props.audioContext.resume().then(() => {\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n      activeAudioNodes.forEach((node) => {\n        if (node) {\n          node.stop();\n        }\n      });\n      this.setState({\n        activeAudioNodes: {}\n      });\n    });\n  };\n\n  render() {\n    return this.props.render({\n      isLoading: !this.state.instrument,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes\n    });\n  }\n}\n\nexport default SoundfontProvider;\n","import React from \"react\";\nimport { Piano } from \"react-piano\";\n\nconst DURATION_UNIT = 0.2;\nconst DEFAULT_NOTE_DURATION = DURATION_UNIT;\n\nclass PianoWithRecording extends React.Component {\n  static defaultProps = {\n    notesRecorded: false,\n    startTime: 0\n  };\n\n  state = {\n    keysDown: {},\n    noteDuration: DEFAULT_NOTE_DURATION,\n    playing: false\n  };\n\n  onPlayNoteInput = (midiNumber) => {\n    if (this.state.playing) return;\n    var d = new Date();\n    this.setState({\n      notesRecorded: false,\n      startTime: d.getTime(),\n      playing: true\n    });\n    console.log(\"startTime\", this.state.startTime);\n  };\n\n  onStopNoteInput = (midiNumber, { prevActiveNotes }) => {\n    if (this.state.playing === false) return;\n    var d = new Date();\n    console.log(\"endTime\", d.getTime());\n    console.log(\"diff\", d.getTime() - this.state.startTime);\n\n    if (this.state.notesRecorded === false) {\n      this.setState({\n        noteDuration: (d.getTime() - this.state.startTime) / 1000,\n        playing: false,\n        notesRecorded: true\n      });\n      this.recordNotes(prevActiveNotes, this.state.noteDuration);\n    }\n  };\n\n  recordNotes = (midiNumbers, duration) => {\n    if (this.props.recording.mode !== \"RECORDING\") {\n      return;\n    }\n    const newEvents = midiNumbers.map((midiNumber) => {\n      return {\n        midiNumber,\n        time: this.props.recording.currentTime,\n        duration: duration\n      };\n    });\n    this.props.setRecording({\n      events: this.props.recording.events.concat(newEvents),\n      currentTime: this.props.recording.currentTime + duration\n    });\n  };\n\n  render() {\n    const {\n      playNote,\n      stopNote,\n      recording,\n      setRecording,\n      ...pianoProps\n    } = this.props;\n\n    const { mode, currentEvents } = this.props.recording;\n    const activeNotes =\n      mode === \"PLAYING\"\n        ? currentEvents.map((event) => event.midiNumber)\n        : null;\n    return (\n      <div>\n        <Piano\n          playNote={this.props.playNote}\n          stopNote={this.props.stopNote}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          activeNotes={activeNotes}\n          {...pianoProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PianoWithRecording;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport { Piano, KeyboardShortcuts, MidiNumbers } from \"react-piano\";\nimport \"react-piano/dist/styles.css\";\n\nimport DimensionsProvider from \"./DimensionsProvider\";\nimport SoundfontProvider from \"./SoundfontProvider\";\nimport PianoWithRecording from \"./PianoWithRecording\";\nimport \"./style.css\";\nimport { array } from \"prop-types\";\n\n// webkitAudioContext fallback needed to support Safari\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = \"https://d1pzp51pvbm36p.cloudfront.net\";\nconst backendIP = \"http://159.89.126.155:5000/\";\n\nvar path = require('path')\nvar noteRange = {\n  first: MidiNumbers.fromNote(\"c3\"),\n  last: MidiNumbers.fromNote(\"f4\"),\n};\n\nvar keyboardShortcuts = KeyboardShortcuts.create({\n  firstNote: noteRange.first,\n  lastNote: noteRange.last,\n  keyboardConfig: KeyboardShortcuts.HOME_ROW,\n});\n\nfunction App() {\n  return (\n    <div>\n      <div className={\"logo\"}>\n        <center>\n          <img src=\"https://i.ibb.co/pnNq9cX/Untitled-1.jpg\"></img>\n        </center>\n      </div>\n\n      <div>\n        <ResponsivePiano />\n      </div>\n    </div>\n  );\n}\n\nclass ResponsivePiano extends React.Component {\n\n  state = {\n    recording: {\n      mode: \"RECORDING\",\n      events: [],\n      currentTime: 0,\n      currentEvents: [],\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.scheduledEvents = [];\n  }\n\n  getRecordingEndTime = () => {\n    if (this.state.recording.events.length === 0) {\n      return 0;\n    }\n    return Math.max(\n      ...this.state.recording.events.map((event) => event.time + event.duration)\n    );\n  };\n\n  setRecording = (value) => {\n    this.setState({\n      recording: Object.assign({}, this.state.recording, value),\n    });\n  };\n\n  onClickPlay = () => {\n    this.setRecording({\n      mode: \"PLAYING\",\n    });\n    const startAndEndTimes = _.uniq(\n      _.flatMap(this.state.recording.events, (event) => [\n        event.time,\n        event.time + event.duration,\n      ])\n    );\n    startAndEndTimes.forEach((time) => {\n      this.scheduledEvents.push(\n        setTimeout(() => {\n          const currentEvents = this.state.recording.events.filter((event) => {\n            return event.time <= time && event.time + event.duration > time;\n          });\n          this.setRecording({\n            currentEvents,\n          });\n        }, time * 1000)\n      );\n    });\n    // Stop at the end\n    setTimeout(() => {\n      this.onClickStop();\n    }, this.getRecordingEndTime() * 1000);\n  };\n\n  onClickStop = () => {\n    this.scheduledEvents.forEach((scheduledEvent) => {\n      clearTimeout(scheduledEvent);\n    });\n    this.setRecording({\n      mode: \"RECORDING\",\n      currentEvents: [],\n    });\n  };\n\n  onClickClear = () => {\n    this.onClickStop();\n    this.setRecording({\n      events: [],\n      mode: \"RECORDING\",\n      currentEvents: [],\n      currentTime: 0,\n    });\n  };\n\n  onClickChange = () => {\n    this.noteRange = {\n      first: MidiNumbers.fromNote(\"c3\"),\n      last: MidiNumbers.fromNote(\"f5\"),\n    };\n\n    this.keyboardShortcuts = KeyboardShortcuts.create({\n      firstNote: noteRange.first,\n      lastNote: noteRange.last,\n      keyboardConfig: KeyboardShortcuts.HOME_ROW,\n    });\n  };\n\n  onClickML = async () => {\n    let loader = document.querySelector(\"#loader\");\n    let button =document.querySelector(\".buttonBody\")\n    let player = document.getElementById(\"audio-player\");\n    loader.style.display=\"block\";\n    button.style.display=\"none\";\n    player.style.display=\"none\";\n    let durations = this.state.recording.events.map((a) => a.duration);\n    let pitches = this.state.recording.events.map((a) => a.midiNumber);\n\n    let dataToSend = {\n      pitch: pitches,\n      duration: durations,\n    };\n\n    let res = await fetch(backendIP+\"generate_midi\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(dataToSend),\n    });\n\n    let midiFileName = await res.text();\n    midiFileName = path.basename(midiFileName);\n\n    let mp3FileNamePromise = await fetch(backendIP+\"get_mp3\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ file_name: midiFileName }),\n    });\n\n    let mp3FileName = await mp3FileNamePromise.text();\n\n    player.style.display=\"block\";\n    player.src = backendIP+`${mp3FileName}`;\n    loader.style.display=\"none\";\n    button.style.display=\"block\";\n\n  \n    this.setRecording({\n      events: [],\n      mode: \"RECORDING\",\n      currentEvents: [],\n      currentTime: 0,\n    });\n  };\n\n  render() {\n    return (\n      <DimensionsProvider>\n        {({ containerWidth, containerHeight }) => (\n          <div>\n            <div className=\"piano\">\n              <SoundfontProvider\n                instrumentName=\"acoustic_grand_piano\"\n                audioContext={audioContext}\n                hostname={soundfontHostname}\n                render={({ isLoading, playNote, stopNote }) => (\n                  <PianoWithRecording\n                    recording={this.state.recording}\n                    setRecording={this.setRecording}\n                    noteRange={noteRange}\n                    width={containerWidth*0.75}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                    disabled={isLoading}\n                    keyboardShortcuts={keyboardShortcuts}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"buttonBody\">\n              {/* <button onClick={this.onClickPlay}>Play</button>\n              <button onClick={this.onClickStop}>Stop</button>\n              <button onClick={this.onClickClear}>Clear</button>\n              <button onClick={this.onClickChange}>Change</button> */}\n              <button onClick={this.onClickML} disabled={this.state.recording.events.length == 0}>Generate</button>\n            </div>\n            <div id=\"loader\"></div>\n            <center>\n              <audio id=\"audio-player\" controls src=\"\">\n                Your browser does not support the\n                <code>audio</code> element.\n              </audio>\n            </center>\n            {/* <div className=\"mt-5\">\n              <strong>Recorded notes</strong>\n              <div>{JSON.stringify(this.state.recording.events)}</div>\n            </div> */}\n          </div>\n        )}\n      </DimensionsProvider>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}